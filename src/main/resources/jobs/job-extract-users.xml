<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd
		">
        
	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="itemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select ID, NAME from TEST_1 where id > #{jobParameters['id']}" />
		<property name="rowMapper">
			<bean class="com.mine.firstproject.springbootfirstproject.UserRowMapper" />
		</property>
	</bean>

	<bean id="pagingItemReader"
		class="org.springframework.batch.item.database.JdbcPagingItemReader"
		scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="queryProvider">
			<bean
				class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
				<property name="dataSource" ref="dataSource" />
				<property name="selectClause" value="select id, name" />
				<property name="fromClause" value="from TEST_1" />
				<property name="whereClause" value="where name=:name" />
				<property name="sortKey" value="id" />
			</bean>
		</property>
		<property name="parameterValues">
			<map>
				<entry key="name" value="#{jobParameters['name']}" />
			</map>
		</property>
		<property name="pageSize" value="10" />
		<property name="rowMapper">
			<bean class="com.mine.firstproject.springbootfirstproject.UserRowMapper" />
		</property>
	</bean>

	<job id="testJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1">
			<tasklet>
				<chunk reader="itemReader" writer="avroFileItemWriter"
					commit-interval="1" />
			</tasklet>
		</step>
	</job>

	<!--
	<bean id="itemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
		<property name="resource" value="file:xml/outputs/users.xml" />
		<property name="marshaller" ref="userUnmarshaller" />
		<property name="rootTagName" value="users" />
	</bean>
	
	<bean id="userUnmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="aliases">
			<util:map id="aliases">
				<entry key="user" value="com.mine.firstproject.springbootfirstproject.User" />
			</util:map>
		</property>
	</bean>
	-->

	<!-- csv file writer -->
	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:output/users.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, username" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<!-- AVRO file writer -->
	<bean id="avroFileItemWriter" class="org.springframework.batch.item.avro.AvroItemWriter">
		<constructor-arg ref="avrowritableResource" />
		<constructor-arg ref="avroSchemaResource" />
		<constructor-arg value="com.mine.firstproject.springbootfirstproject.User" />
	</bean>
	
	<bean id="avrowritableResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="output/users.all.avro" />
	</bean>

	<bean id="avroSchemaResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="src/main/resources/avro/users.avsc" />
	</bean>
	
</beans>